/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.EventController;
import controller.UserController;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import model.Event;
import model.Noti;
import model.User;

/**
 *
 * @author Lê Ngọc Trường
 */
public class AddUserForEvent extends javax.swing.JFrame {
    // Tạo 1 User Controller để thao tác với dữ liệu User
    UserController userController = new UserController();
    // Tạo 1 Event Controller để thao tác với Event
    EventController eventController = new EventController();
    // Tạo 1 đối tượng Notification để có thể dùng hiển thị các thông báo khi thực hiện 1 điều gì đó. Tối ưu sử dụng lại code
    Noti noti = new Noti(this);
    // Lưu thông tin danh sách User
    ArrayList<User> listUser;
    // Lưu danh sách sự kiện
    ArrayList<Event> listEvent;
    // DefaultComboBoxModel của Event
    DefaultComboBoxModel<String> cmodel = new DefaultComboBoxModel<>();
    // 2 biến lưu mã sinh viên của admin và password admin sau khi thoát hiển thị lại
    private String maSVAdmin;
    private String passwordAdmin;
    // Tao DefaultTableModel để đổ dữ liệu vào Table user
    DefaultTableModel dmodel = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            // chỉ được xem, không được sửa row and column nào hết
            return false;
        }
    };
    
    // tao 1 DTM để đổ dữ liệu vào Table Event
    DefaultTableModel dmodelEV = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            // chỉ được xem, không được sửa row and column nào hết
            return false;
        }
    };
    /**
     * Creates new form AddUserForEvent
     */
    public AddUserForEvent() {
        initComponents();
        showInfor();
        pack();
    }

    public AddUserForEvent(String maSVAdmin, String passwordAdmin) {
        initComponents();
        this.maSVAdmin = maSVAdmin;
        this.passwordAdmin = passwordAdmin;
        showInfor();
        pack();
    }
    
    // Method show Information when JFrame create
    private void showInfor(){
        // Lấy ra danh sách user chính thức và rảnh
        try{
            listUser = userController.getListUserFree();
        }catch(IOException e){
            noti.showNotiError("Có lỗi: " + e.toString());
        }
        
        // Add các cột cho DTM
        dmodel.addColumn("Mã sinh viên");
        dmodel.addColumn("Họ tên");
        dmodel.addColumn("Trạng thái");
        dmodel.addColumn("Thông tin");
        
        // Add các row cho DTM
        for(User user : listUser){
            Object[] row = {user.getMaSV(), user.getFullName(), userController.getStatus(user.getStatus()), userController.getCheck(user.getCheck())};
            dmodel.addRow(row);
        }
        
        // Lấy dữ liệu events
        try{
            listEvent = eventController.getListEvents();
        }catch(Exception e){
            noti.showNotiError("Có lỗi: " + e.toString());
        }
        // Add các cột cho DTM của Event table
        dmodelEV.addColumn("ID");
        dmodelEV.addColumn("Tên sự kiện");
        dmodelEV.addColumn("Ngày bắt đầu");
        dmodelEV.addColumn("Ngày kết thúc");
        dmodelEV.addColumn("Số thành viên cần");
        dmodelEV.addColumn("Số thành viên thiếu");
        dmodelEV.addColumn("Địa chỉ");
        
        // Add row cho DTM của Event table
        for(Event ev : listEvent){
            Object[] row = {ev.getId(), ev.getNameEvent(), ev.getStartDay(), ev.getEndDay(), ev.getNumberOfStudent(), ev.getNumberOfStudent() - ev.getUsers().size(), ev.getAddress()};
            dmodelEV.addRow(row);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUser = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnExist = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableEvent = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chọn sinh viên đi sự kiện");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách thành viên rảnh"));

        tableUser.setModel(dmodel);
        jScrollPane1.setViewportView(tableUser);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
        );

        btnAdd.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnExist.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnExist.setText("Thoát");
        btnExist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExistActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin sự kiện"));

        tableEvent.setModel(dmodelEV);
        jScrollPane2.setViewportView(tableEvent);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(btnExist, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(302, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExist, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        // lấy ra index của cả 2 bảng nếu chọn
        int indexU = tableUser.getSelectedRow();
        int indexE = tableEvent.getSelectedRow();
        if(indexU != -1){
            if(indexE != -1){
                String maSv = (String) dmodel.getValueAt(indexU, 0);
                long idEvent = (long) dmodelEV.getValueAt(indexE, 0);
                try{
                    if(eventController.addUserForEvent(maSv, idEvent)){
                        noti.showNotiInformation("Thêm thành viên " + maSv + " vào sự kiện " + dmodelEV.getValueAt(indexE, 1));
                        new AddUserForEvent(maSVAdmin, passwordAdmin).setVisible(true);
                        this.setVisible(false);
                    }
                }catch(Exception e){
                    noti.showNotiError("Có lỗi: " + e.toString());
                }
            }
            else{
                noti.showNotiError("Vui lòng chọn sự kiện muốn thêm thành viên tham gia");
            }
        }
        else{
            noti.showNotiError("Vui lòng chọn thành viên tham gia");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnExistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExistActionPerformed
        // TODO add your handling code here:
        new QLEvent(maSVAdmin, passwordAdmin).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnExistActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddUserForEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddUserForEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddUserForEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddUserForEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddUserForEvent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnExist;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableEvent;
    private javax.swing.JTable tableUser;
    // End of variables declaration//GEN-END:variables
}
